@model PatientManagementSoftware.Models.AppointmentsViewModel
@{
    ViewBag.Title = "Edit";
    ViewBag.Page = "Appointment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid py-4">


    <div class="card my-4">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
            <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
                <h6 class="text-white text-capitalize ps-3">Book Appointment</h6>
            </div>
        </div>
        <div class="card-body mx-3 pt-3 p-2">

            <div class="card-body">
                @using (Html.BeginForm("UpdateAppointment", "Appointment", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.AppointmentID)
                    <div class="row">
                        <div class="col-lg-6 col-sm-12 mb-3">
                            <div class="input-group input-group-outline is-filled">
                                @Html.LabelFor(model => model.PatientName, new { @class = "form-label" })
                                @Html.DropDownListFor(model => model.PatientID, new SelectList(ViewBag.PatientList, "PatientID", "Name"), "--Select Patient--", new { @class = "form-control", type = "text", required = "required" })
                                @Html.ValidationMessageFor(m => m.PatientID, "", new { @class = "form-text text-muted" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-12 mb-3 ">
                            <div class="input-group input-group-outline is-filled">
                                @Html.LabelFor(model => model.DoctorName, new { @class = "form-label" })
                                @Html.DropDownListFor(model => model.DoctorID, new SelectList(ViewBag.DoctorList, "DoctorID", "Name"), "--Select Doctor--", new { @class = "form-control", type = "text", required = "required" })
                                @Html.ValidationMessageFor(m => m.DoctorID, "", new { @class = "form-text text-muted" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-12 mb-3 ">
                            <div class="input-group input-group-outline is-filled">
                                @Html.LabelFor(model => model.AppointmentDateTime, new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.AppointmentDateTime, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.AppointmentDateTime, "", new { @class = "form-text text-muted" })
                            </div>
                        </div>
                        <div class="col-lg-6 col-sm-12 mb-3">
                            <div class="input-group input-group-outline is-filled">
                                @Html.LabelFor(model => model.Reason, new { @class = "form-label" })
                                @Html.TextBoxFor(model => model.Reason, new { @class = "form-control", type = "text", required = "required", pattern = "[A-Za-z ]+", title = "Only letters and spaces allowed" })
                                @Html.ValidationMessageFor(m => m.Reason, "", new { @class = "form-text text-muted" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6 col-sm-12 mb-3">
                            <div class="input-group input-group-outline is-filled">
                                @Html.LabelFor(model => model.Status, new { @class = "form-label" })
                                @Html.DropDownListFor(model => model.Status, new SelectList(new[]
                                  {
                                         new SelectListItem{Text="Booked", Value="Booked" },
                                         new SelectListItem{Text="Appointed", Value="Appointed" },
                                  }, "Value", "Text"), new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(m => m.Status, "", new { @class = "form-text text-muted" })
                            </div>
                        </div>

                    </div>
                    <div class="text-center mb-2">
                        <button type="submit" class="btn btn-lg bg-gradient-primary btn-sm mb-0">Submit</button>
                    </div>

                }
            </div>
        </div>
    </div>

</div>

