@model PatientManagementSoftware.Models.PatientViewModel
@{
    ViewBag.Title = "Edit";
    ViewBag.Page = "Patient";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">


    <div class="card my-4">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
            <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
                <h6 class="text-white text-capitalize ps-3">Patient Registration</h6>
            </div>
        </div>
        <div class="card-body mx-3 pt-3 p-2">
            @using (Html.BeginForm("UpdatePatient", "Patient", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.PatientID)
                <div class="row mb-3">
                    <div class="col-lg-6 col-sm-12 ">
                        <div class="input-group input-group-outline is-filled">
                            @Html.LabelFor(model => model.Name, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required", pattern = "[A-Za-z ]+", title = "Only letters and spaces allowed" })
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "form-text text-muted" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-12 ">
                        <div class="input-group input-group-outline is-filled">
                            @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control", placeholder = "", required = "required" })
                            @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "form-text text-muted" })
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-6 col-sm-12 ">
                        <div class="input-group input-group-outline is-filled">
                            @Html.LabelFor(model => model.Address, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control", type = "text", required = "required", pattern = "[A-Za-z0-9\\s\\-,\\.]+", title = "Please enter a valid address (alphanumeric characters, spaces, commas, periods, and hyphens)" })
                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "form-text text-muted" })
                        </div>
                    </div>
                    <div class="col-lg-6 col-sm-12 ">
                        <div class="input-group input-group-outline is-filled">
                            @Html.LabelFor(model => model.ContactNumber, new { @class = "form-label" })
                            @Html.TextBoxFor(model => model.ContactNumber, new { @class = "form-control", required = "required", pattern = "[0-9]+", title = "Only numeric values allowed" })
                            @Html.ValidationMessageFor(m => m.ContactNumber, "", new { @class = "form-text text-muted" })
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-lg-6 col-sm-12 ">
                        <div class="input-group input-group-outline is-filled">
                            @Html.LabelFor(model => model.Gender, new { @class = "form-label" })
                            @Html.DropDownListFor(model => model.Gender, new SelectList(new[]
                              {
                                     new SelectListItem{Text="Male", Value="Male" },
                                     new SelectListItem{Text="Female", Value="Female" },
                              }, "Value", "Text"), "--Choose Gender--", new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "form-text text-muted" })
                        </div>
                    </div>
                </div>

                <div class="text-center mb-2">
                    <button type="submit" class="btn btn-lg bg-gradient-primary btn-lg mb-0">Submit</button>
                </div>
            }
        </div>
    </div>




</div>
